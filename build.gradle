plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.huangjien.aiBackend'
version = '0.2'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springAiVersion', "1.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.ai:spring-ai-starter-mcp-client'
    implementation 'org.springframework.ai:spring-ai-starter-mcp-server-webmvc'
    implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

// Test configuration - manual execution may be required due to Gradle compatibility issues

// Docker build task
task dockerBuild(type: Exec) {
    dependsOn bootJar
    group = 'docker'
    description = 'Build Docker image after building the JAR'
    
    commandLine 'docker', 'build', '--build-arg', "JAR_VERSION=${project.version}", 
                '-t', 'huangjien/aibackend:latest', 
                '-t', "huangjien/aibackend:${project.version}", 
                '.'
    
    doFirst {
        println "Building Docker image with JAR version: ${project.version}"
    }
    
    doLast {
        println 'Docker image "aibackend" built successfully with tags:'
        println "  - huangjien/aibackend:latest"
        println "  - huangjien/aibackend:${project.version}"
        println 'Run with: docker run -p 8080:8080 aibackend:latest'
    }
}